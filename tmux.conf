# :: TPM - Tmux plugin manager
if "test ! -d ~/.tmux/plugins/tpm" \
     "run 'mkdir -p ~/.tmux/plugins && git clone https://github.com/tmux-plugins/tpm ~/.tmux/plugins/tpm && ~/.tmux/plugins/tpm/bin/install_plugins'"

# List of plugins
set -g @tpm_plugins '               \
     caiogondim/maglev              \
     tmux-plugins/tpm               \
     tmux-plugins/tmux-sensible     \
     tmux-plugins/tmux-resurrect    \
     tmux-plugins/tmux-continuum    \
     tmux-plugins/tmux-yank         \
     tmux-plugins/tmux-pain-control \
     tmux-plugins/tmux-copycat      \
     tmux-plugins/tmux-open         \
     tmux-plugins/tmux-battery      \
     tmux-plugins/tmux-cpu          \
     christoomey/vim-tmux-navigator \
'

# Initialize plugin manager
run '~/.tmux/plugins/tpm/tpm'

# Count windows from 1
set -g base-index 1
set -g pane-base-index 1

# Remove ESC delay
set -sg escape-time 0

# Enable mouse
set -g mouse on

# Change prefix
set -g prefix C-a
unbind C-b

# Reload config
bind r source-file ~/.tmux.conf \; display "Reloaded!"

# Horizontal and vertical splits
bind \ split-window -v -c "#{pane_current_path}"
bind | split-window -h -c "#{pane_current_path}"
bind c new-window -c "#{pane_current_path}"

# Move tmux status line on top
set-option -g status-position top
set-option -g repeat-time 0

# Copy paste integration on macOS
if-shell 'test "$(uname -s)" = Darwin' 'set-option -g default-command "exec reattach-to-user-namespace -l zsh"'

# Use vim keybindings in copy mode
setw -g mode-keys vi

# Setup 'v' to begin selection as in Vim
bind-key -t vi-copy v begin-selection
bind-key -t vi-copy y copy-pipe "reattach-to-user-namespace pbcopy"

# Update default binding of `Enter` to also use copy-pipe
unbind -t vi-copy Enter
bind-key -t vi-copy Enter copy-pipe "reattach-to-user-namespace pbcopy"

# Bind ']' to use pbpaste
bind ] run "reattach-to-user-namespace pbpaste | tmux load-buffer - && tmux paste-buffer"

